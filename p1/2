#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <strings.h>
#include <string.h>

void aposRemoval(char* word){
	if (word == NULL)
		return;

	char str[128];
	int j = 0;
	for (int i = 0; i < strlen(word); i++){
        	if ((word[i] >= 'a' && word[i] <= 'z') || (word[i] >= 'A' && word[i] <= 'Z') || (word[i] >= '0' && word[i] <= '9')){
            		str[j] = word[i];
            		j++;
        			}
    		}
	str[j] = '\0';
	word = str;
	}
		


int main(int argc, char *argv[]) {
	FILE *fp;
	char buffer[1000];
	char *buff;
	int result;
	int option;
	extern char *optarg;
	char *filename;
	char *prefix;
	int f_flag = 0;
	int index; 

	while((option = getopt(argc, argv, "Vhf:")) != -1){
		switch (option){
			case 'V':
				printf("my-look from CS537 Spring 2022\n");
				exit(0);
			case 'h':
				printf("my-look takes string as an input and returns any lines in a file that contains that string as a prerfix.");
				exit(0);
			case 'f':
				f_flag++;
				filename = optarg;				
				break; 
			case '?':
				if (optopt == 'f'){
					printf("my-look: invalid command line\n");
					exit(1);
					}
			default:
				printf("my-look: invalid command line\n");
				exit(1);
				}
			}
	
	for (index = optind; index < argc; index++){
		prefix = argv[index];
 		}
	
	if (f_flag == 1){
		fp = fopen(filename, "r");
		}

	if (fp == NULL && f_flag == 1){
		printf("my-look: cannot open file\n");
		exit(1);
		}else{
			while(!feof(fp)){
				buff = fgets(buffer, 1000,fp);
				aposRemoval(buff);
				if (buff == NULL){
					break;
					}
				result = strncasecmp(buff, prefix, strlen(prefix));
				if (result == 0){
					printf("%s", buffer);
					}
				}
			}


	if (f_flag == 0){
		printf("here");
		while(1){
			if (fgets(buffer, 1000, stdin) !=NULL){
				buff = fgets(buffer, 1000, fp);
				if (buff == NULL){
					break;
					}
				printf("%s\n", buff);
				result = strncasecmp(buff, prefix, strlen(prefix));
				if (result == 0){
					printf("%s", buffer);
					}
				}
			}	
		}
	
	fclose(fp);
	return 0;
	}




